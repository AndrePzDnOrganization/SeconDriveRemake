services:
  redis-cache:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - secondon
    ports:
      - "6379:6379"
    
  portgres-db:
    image: postgres:latest
    container_name: postgres-second-drive
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=second-drive
      - POSTGRES_USER=second-drive
      - POSTGRES_PASSWORD=second-drive
    networks:
      - secondon
    volumes:
      - postgres-data:/var/lib/postgressql

  reverse-proxy:
    image: traefik:v2.9
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - secondon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  api-gateway:
    build: ../apps/api-gateway
    ports:
      - "5000:5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gateway.rule=Host(`localhost`)"
      - "traefik.http.services.api-gateway.loadbalancer.server.port=5000"
    networks:
      - secondon
    restart: always
    volumes:
      - ../apps/api-gateway:/app
      - /app/node_modules

volumes:
  postgres-data:

networks:
  secondon:
    driver: bridge